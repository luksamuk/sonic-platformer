# Amplamente inspirado por https://github.com/brooks-builds/bbecs

name: Testes Automatizados

# Os testes ocorrem na geração de pull requests para a branch master
# e também na geração de tags de versão.
on:
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Instalação de dependências
        run: sudo apt update && sudo apt install libasound2-dev libudev-dev pkg-config

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Checkout do repositório
        uses: actions/checkout@v2

      - name: Instalação da toolchain de Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt
      
      - name: Revisão automatizada de código (Linter)
        run: cargo fmt -- --check
      
      - name: Sugestões e melhorias de código (Clippy)
        run: cargo clippy -- -D clippy::all
      
      - name: Testes unitários
        run: cargo test
  
  build-linux:
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Instalação de dependências
        run: sudo apt update && sudo apt install libasound2-dev libudev-dev pkg-config

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Checkout do repositório
        uses: actions/checkout@v2

      - name: Instalação da toolchain de Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt
      
      - name: Compilação
        run: cargo build
      
      - name: Upload de artefatos
        uses: actions/upload-artifact@v2
        with:
          name: linux_debug
          path: ./target/debug/sonic-platformer

  build-windows:
    runs-on: windows-latest
    needs: [test]

    steps:
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Checkout do repositório
        uses: actions/checkout@v2

      - name: Instalação da toolchain de Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt
      
      - name: Compilação
        run: cargo build
      
      - name: Upload de artefatos
        uses: actions/upload-artifact@v2
        with:
          name: windows_debug
          path: ./target/debug/sonic-platformer.exe
